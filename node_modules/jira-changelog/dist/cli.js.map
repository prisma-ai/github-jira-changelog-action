{"version":3,"sources":["../src/cli.js"],"names":["runProgram","commandLineArgs","pkg","require","program","version","option","parseRange","parse","process","argv","gitPath","cwd","args","length","path","resolve","configPath","config","join","CONF_FILENAME","jira","Jira","source","SourceControl","release","generateReleaseVersionName","console","log","range","getRangeObject","commitLogs","getCommitLogs","changelog","generate","data","transformCommitLogs","transformData","Promise","baseUrl","releaseVersions","entitles","Entities","AllHtmlEntities","changelogMessage","ejs","render","template","decode","slack","postToSlack","e","error","stack","message","Slack","isEnabled","channel","transformForSlack","postMessage","rangeStr","split","logs","approvalStatus","Array","isArray","ticketHash","reduce","all","tickets","forEach","ticket","key","commits","push","ticektList","_","sortBy","Object","values","fields","issuetype","name","pendingTickets","filter","includes","status","reporters","email","reporter","emailAddress","displayName","slackUser","pendingByOwner","item","user","commit","noTickets","approved","pending","defaultRange","sourceControl","from","to","dateRange","after","before","keys","assign","Error"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\n/**\n * The jira-changelog CLI\n */\n\nimport \"@babel/polyfill\";\nimport 'source-map-support/register';\nimport program from 'commander';\nimport _ from 'lodash';\nimport ejs from 'ejs'\nimport path from 'path';\nimport Slack from './Slack';\nimport Entities from 'html-entities';\n\nimport {readConfigFile, CONF_FILENAME} from './Config';\nimport SourceControl from './SourceControl';\nimport Jira from './Jira';\n\nrunProgram();\n\n/**\n * Parse command line arguments\n */\nfunction commandLineArgs() {\n  const pkg = require('../package.json');\n  program\n    .version(pkg.version)\n    .option(\n      '-c, --config <filepath>',\n      'Path to the config file.'\n    )\n    .option(\n      '-r, --range <from>...<to>',\n      'git commit range for changelog',\n      parseRange\n    )\n    .option(\n      '-d, --date <date>[...date]',\n      'Only include commits after this date',\n      parseRange\n    )\n    .option(\n      '-s, --slack',\n      'Automatically post changelog to slack (if configured)'\n    )\n    .option(\n      '--release [release]',\n      'Assign a release version to these stories'\n    )\n    .parse(process.argv);\n}\n\n/**\n * Run the main program\n */\nasync function runProgram() {\n  try {\n    commandLineArgs();\n\n    // Determine the git workspace path\n    let gitPath = process.cwd();\n    if (program.args.length) {\n      gitPath = program.args[0];\n    }\n    gitPath = path.resolve(gitPath);\n\n    // Config file path\n    var configPath;\n    if (program.config) {\n      configPath = path.resolve(program.config);\n    } else {\n      configPath = path.join(gitPath, CONF_FILENAME);\n    }\n\n    const config = readConfigFile(configPath);\n    const jira = new Jira(config);\n    const source = new SourceControl(config);\n\n    // Release flag used, but no name passed\n    if (program.release === true) {\n      if (typeof config.jira.generateReleaseVersionName !== 'function') {\n        console.log(\"You need to define the jira.generateReleaseVersionName function in your config, if you're not going to pass the release version name in the command.\")\n        return;\n      }\n      program.release = await config.jira.generateReleaseVersionName();\n    }\n\n    // Get logs\n    const range = getRangeObject(config);\n    const commitLogs = await source.getCommitLogs(gitPath, range);\n    const changelog = await jira.generate(commitLogs, program.release);\n\n    // Template data template\n    let data = await transformCommitLogs(config, changelog);\n    if (typeof config.transformData == 'function') {\n      data = await Promise.resolve(config.transformData(data));\n    }\n    data.jira = {\n      baseUrl: config.jira.baseUrl,\n      releaseVersions: jira.releaseVersions,\n    };\n\n    // Render and output template\n    const entitles = new Entities.AllHtmlEntities();\n    const changelogMessage = ejs.render(config.template, data);\n    console.log(entitles.decode(changelogMessage));\n\n    // Post to slack\n    if (program.slack) {\n      postToSlack(config, data, changelogMessage);\n    }\n  } catch(e) {\n    console.error('Error: ', e.stack);\n    console.log(e.message);\n  }\n}\n\n/**\n * Post the changelog to slack\n *\n * @param {Object} config - The configuration object\n * @param {Object} data - The changelog data object.\n * @param {String} changelogMessage - The changelog message\n */\nasync function postToSlack(config, data, changelogMessage) {\n  const slack = new Slack(config);\n\n  if (!slack.isEnabled() || !config.slack.channel) {\n    console.error('Error: Slack is not configured.');\n    return;\n  }\n\n  console.log(`\\nPosting changelog message to slack channel: ${config.slack.channel}...`);\n  try {\n\n    // Transform for slack\n    if (typeof config.transformForSlack == 'function') {\n      changelogMessage = await Promise.resolve(config.transformForSlack(changelogMessage, data));\n    }\n\n    // Post to slack\n    await slack.postMessage(changelogMessage, config.slack.channel);\n    console.log('Done');\n\n  } catch(e) {\n    console.log('Error: ', e.stack);\n  }\n}\n\n/**\n * Convert a range string formatted as \"a...b\" into an array.\n *\n * @param {String} rangeStr - The range string.\n * @return {Array}\n */\nfunction parseRange(rangeStr) {\n  return rangeStr.split(/\\.{3,3}/);\n}\n\n/**\n * Filter commit logs into template data.\n *\n * Data:\n * -----\n *  {\n *    commits: {\n *      all: [],       // all commits\n *      tickets: [],   // commits associated with jira tickets\n *      noTickets: []  // commits not associated with jira tickets\n *    },\n *    tickets: {\n *      all: [],       // all tickets\n *      approved: [],  // tickets marked as approved\n *      pending: [],   // tickets not marked as approved\n *      pendingByOwner: [] // pending tickets arranged under ticket reporters.\n *    }\n *  }\n *\n * @param {Object} config - The config object provided by Config.getConfigForPath\n * @param {Array} logs - List of commit logs and their jira tickets.\n *\n * @return {Promise} Resolves to an object with filtered commit/ticket data\n */\nfunction transformCommitLogs(config, logs) {\n  let approvalStatus = config.jira.approvalStatus;\n  if (!Array.isArray(approvalStatus)) {\n    approvalStatus = [approvalStatus];\n  }\n\n  // Tickets and their commits\n  const ticketHash = logs.reduce((all, log) => {\n    log.tickets.forEach((ticket) => {\n      all[ticket.key] = all[ticket.key] || ticket;\n      all[ticket.key].commits = all[ticket.key].commits || [];\n      all[ticket.key].commits.push(log);\n    });\n    return all;\n  }, {});\n  let ticektList = _.sortBy(Object.values(ticketHash), ticket => ticket.fields.issuetype.name);\n  let pendingTickets = ticektList.filter(ticket => !approvalStatus.includes(ticket.fields.status.name));\n\n  // Pending ticket owners and their tickets/commits\n  const reporters = {};\n  pendingTickets.forEach((ticket) => {\n    const email = ticket.fields.reporter.emailAddress;\n    if (!reporters[email]) {\n      reporters[email] = {\n        email,\n        name: ticket.fields.reporter.displayName,\n        slackUser: ticket.slackUser,\n        tickets: [ticket]\n      };\n    } else {\n      reporters[email].tickets.push(ticket);\n    }\n  });\n  const pendingByOwner = _.sortBy(Object.values(reporters), item => item.user);\n\n\n  // Output filtered data\n  return {\n    commits: {\n      all: logs,\n      tickets: logs.filter(commit => commit.tickets.length),\n      noTickets: logs.filter(commit => !commit.tickets.length)\n    },\n    tickets: {\n      pendingByOwner,\n      all: ticektList,\n      approved: ticektList.filter(ticket => approvalStatus.includes(ticket.fields.status.name)),\n      pending: pendingTickets\n    }\n  }\n}\n\n\n/**\n * Construct the range object from the CLI arguments and config\n *\n * @param {Object} config - The config object provided by Config.getConfigForPath\n * @return {Object}\n */\nfunction getRangeObject(config) {\n  const range = {};\n  const defaultRange = (config.sourceControl && config.sourceControl.defaultRange) ? config.sourceControl.defaultRange : {};\n\n  if (program.range && program.range.length) {\n    range.from = program.range[0];\n    range.to = program.range[1];\n  }\n  if (program.dateRange && program.dateRange.length) {\n    range.after = program.dateRange[0];\n    if (program.dateRange.length > 1) {\n      range.before = program.dateRange[1];\n    }\n  }\n\n  // Use default range\n  if (!Object.keys(range).length && Object.keys(defaultRange).length) {\n    Object.assign(range, defaultRange);\n  }\n\n  if (!Object.keys(range).length){\n      throw new Error('No range defined for the changelog.');\n  }\n  return range;\n}\n"],"file":"cli.js"}